{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_PROFILES } from './types'; //get the current user profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get profile by id\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get github repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //create or update a profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard'); //redirecting to dashboard\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard'); //redirecting to dashboard\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard'); //redirecting to dashboard\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete an experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete an education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //DELETE ACCOUNT AND PROFILE\n\nexport const deleteAccount = id => async dispatch => {\n  if (window.confirm(\"Are you sure? This can't be undone!\")) {\n    try {\n      const res = await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been permanently deleted!'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/RAHUL/Documents/web dev projects/DeveloperPlus/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","GET_PROFILES","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","GET_REPOS","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_PROFILES\r\n} from './types';\r\n\r\n//get the current user profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  try {\r\n    const res = await axios.get('/api/profile');\r\n    dispatch({ type: GET_PROFILES, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//get profile by id\r\nexport const getProfileById = userId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//get github repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n    dispatch({ type: GET_REPOS, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//create or update a profile\r\nexport const createProfile = (\r\n  formData,\r\n  history,\r\n  edit = false\r\n) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.post('/api/profile', formData, config);\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard'); //redirecting to dashboard\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//add experience\r\n\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/experience', formData, config);\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    history.push('/dashboard'); //redirecting to dashboard\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//add education\r\n\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/education', formData, config);\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    history.push('/dashboard'); //redirecting to dashboard\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//delete an experience\r\nexport const deleteExperience = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n    dispatch(setAlert('Experience Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//delete an education\r\nexport const deleteEducation = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n    dispatch(setAlert('Education Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//DELETE ACCOUNT AND PROFILE\r\n\r\nexport const deleteAccount = id => async dispatch => {\r\n  if (window.confirm(\"Are you sure? This can't be undone!\")) {\r\n    try {\r\n      const res = await axios.delete('/api/profile');\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE\r\n      });\r\n      dispatch({\r\n        type: ACCOUNT_DELETED\r\n      });\r\n\r\n      dispatch(setAlert('Your account has been permanently deleted!'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}